// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  phoneNumber String?
  tickets     Ticket[]
}

model Ticket {
  id        String       @id @default(uuid())
  createdAt DateTime     @default(now())
  qrCodeUrl String
  status    TicketStatus
  user      User         @relation(fields: [userId], references: [id])
  userId    String
  session   DemoSession  @relation(fields: [sessionId], references: [id])
  sessionId String
}

enum TicketStatus {
  CREATED
  ATTENDED
  NOT_ATTENDED
  CANCELLED
  SUBSCRIBED
}

model AdminUser {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model DemoSession {
  id         String   @id @default(uuid())
  date       DateTime
  capacity   Int      @default(30)
  courseName String
  tickets    Ticket[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
